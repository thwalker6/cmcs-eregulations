{"version":3,"file":"SupplementalContent.js","sources":["../../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../../components/SimpleSpinner.vue","../../components/SupplementalContentObject.vue","../../components/ShowMoreButton.vue","../../components/CollapseButton.vue","../../components/Collapsible.vue","../../components/SupplementalContentList.vue","../../components/SupplementalContentCategory.vue","../../components/SupplementalContent.vue"],"sourcesContent":["function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n    <div\n        class=\"ds-u-display--flex ds-u-justify-content--center ds-u-align-items--center\"\n    >\n        <span\n            class=\"ds-c-spinner\"\n            :class=\"spinnerClasses\"\n            :style=\"spinnerStyles\"\n            role=\"status\"\n        >\n            <span class=\"ds-u-visibility--screen-reader\">Loading</span>\n        </span>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"simple-spinner\",\n\n    props: {\n        size: {\n            type: String,\n            default: \"medium\",\n        },\n        filled: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    computed: {\n        spinnerClasses() {\n            return {\n                \"ds-c-spinner--filled\": this.filled,\n                \"ds-c-spinner--small\": this.size === \"small\",\n                \"ds-c-spinner--big\": this.size === \"large\",\n            };\n        },\n\n        spinnerStyles() {\n            return {\n                margin: this.size === \"small\" ? \"4px\" : \"8px\",\n            };\n        },\n    },\n};\n</script>\n","<template>\n  <div class=\"supplemental-content\">\n    <a class=\"supplemental-content-link\" :href=\"url\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <span class=\"supplemental-content-date\" v-bind:class=\"{ 'supplemental-content-mid-bar': !isBlank(name) }\" v-if=\"date\">{{ date|formatDate }}</span>\n      <span class=\"supplemental-content-title\" v-bind:class=\"{ 'supplemental-content-external-link': isBlank(description) }\" v-if=\"!isBlank(name)\">{{ name }}</span>\n      <div v-if=\"!isBlank(description)\" class=\"supplemental-content-description supplemental-content-external-link\">{{ description }}</div>\n    </a>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'supplemental-content-object',\n\n  props: {\n    name: {\n      type: String,\n      required: true,\n    },\n    description: {\n        type: String,\n        required: false,\n    },\n    date: {\n        type: String,\n        required: false,\n    },\n    url: {\n      type: String,\n      required: true,\n    },\n  },\n  \n  filters: {\n    formatDate: function(value) {\n      const date = new Date(value);\n      let options = { year: 'numeric', timeZone: 'UTC' };\n      const raw_date = value.split('-');\n      if(raw_date.length > 1) {\n        options.month = 'long';\n      }\n      if(raw_date.length > 2) {\n        options.day = 'numeric';\n      }\n      const format = new Intl.DateTimeFormat(\"en-US\", options);\n      return format.format(date);\n    }\n  },\n\n  methods: {\n    isBlank: function(str) {\n      return (!str || /^\\s*$/.test(str));\n    },\n  },\n};\n</script>\n","<template>\n    <div class=\"show-more-button\">\n        <b>{{ buttonText }}</b> ({{ count }})\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"show-more-button\",\n    props: {\n        count: {\n            type: Number,\n            default: 1,\n        },\n        buttonText: {\n            type: String,\n            required: true\n        }\n    },\n};\n</script>\n","<template>\n    <button\n        v-bind:class=\"{ visible: visible }\"\n        v-bind:data-test=\"name\"\n        v-bind:aria-label=\"visible ? `collapse ${name}` : `expand ${name}`\"\n        v-on:click=\"click\"\n        class=\"collapsible-title\"\n    >\n        <slot name=\"expanded\" v-if=\"visible && !keepContentsOnToggle\"\n            >Hide</slot\n        >\n        <slot name=\"collapsed\" v-if=\"!visible && !keepContentsOnToggle\"\n            >Show</slot\n        >\n        <slot name=\"contents\" v-if=\"keepContentsOnToggle\">Click here</slot>\n    </button>\n</template>\n\n<script>\nexport default {\n    name: \"collapse-button\",\n\n    created: function () {\n        this.visible = this.state === \"expanded\";\n        this.$root.$on(\"collapse-toggle\", this.toggle);\n    },\n\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n        state: {\n            //expanded or collapsed\n            type: String,\n            required: true,\n        },\n        \"keep-contents-on-toggle\": {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data: function () {\n        return {\n            name: this.name,\n            visible: true,\n        };\n    },\n\n    methods: {\n        click: function (event) {\n            this.$root.$emit(\"collapse-toggle\", this.name);\n        },\n        toggle: function (target) {\n            if (this.name === target) {\n                this.visible = !this.visible;\n            }\n        },\n    },\n};\n</script>\n","<template>\n    <div\n        ref=\"target\"\n        v-bind:data-test=\"name\"\n        v-bind:class=\"{ invisible: !visible }\"\n        v-bind:style=\"[styles]\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"collapsible\",\n\n    created: function () {\n        requestAnimationFrame(() => {\n            this.visible = this.state === \"expanded\";\n            if (!this.visible) {\n                this.$refs.target.classList.add(\"display-none\");\n            }\n        });\n        this.$root.$on(\"collapse-toggle\", this.toggle);\n    },\n\n    mounted: function () {\n        window.addEventListener(\"resize\", this.resize);\n        window.addEventListener(\"transitionend\", this.toggleDisplay);\n    },\n\n    destroyed: function () {\n        window.removeEventListener(\"resize\", this.resize);\n        window.removeEventListener(\"transitionend\", this.toggleDisplay);\n    },\n\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n        state: {\n            //expanded or collapsed\n            type: String,\n            required: true,\n        },\n        transition: {\n            type: String,\n            required: false,\n            default: \"0.5s\",\n        },\n    },\n\n    data: function () {\n        return {\n            name: this.name,\n            height: \"auto\",\n            visible: false,\n            styles: {\n                overflow: \"hidden\",\n                transition: this.transition,\n            },\n        };\n    },\n\n    methods: {\n        resize: function (e) {\n            this.computeHeight();\n        },\n        toggleDisplay: function (e) {\n            if (this.visible) {\n                this.$refs.target.style.height = \"auto\";\n            } else {\n                this.$refs.target.classList.add(\"display-none\");\n            }\n        },\n        toggle: function (target) {\n            if (this.name === target) {\n                this.$refs.target.classList.remove(\"display-none\");\n                requestAnimationFrame(() => {\n                    this.computeHeight();\n                    requestAnimationFrame(() => {\n                        this.visible = !this.visible;\n                    });\n                });\n            }\n        },\n        getStyle: function () {\n            return window.getComputedStyle(this.$refs.target);\n        },\n        setProps: function (visibility, display, position, height) {\n            this.$refs.target.style.visibility = visibility;\n            this.$refs.target.style.display = display;\n            this.$refs.target.style.position = position;\n            this.$refs.target.style.height = height;\n        },\n        _computeHeight: function () {\n            if (this.getStyle().display === \"none\") {\n                return \"auto\";\n            }\n\n            this.$refs.target.classList.remove(\"invisible\");\n\n            this.setProps(\"hidden\", \"block\", \"absolute\", \"auto\");\n\n            const height = this.getStyle().height;\n\n            this.setProps(null, null, null, height);\n            if (!this.visible) {\n                this.$refs.target.classList.add(\"invisible\");\n            }\n            return height;\n        },\n        computeHeight: function () {\n            this.height = this._computeHeight();\n        },\n    },\n};\n</script>\n","<template>\n    <div class=\"supplemental-content-list\" v-if=\"!has_sub_categories\">\n        <supplemental-content-object\n            v-for=\"(content, index) in limitedContent\"\n            :key=\"index\"\n            :name=\"content.name\"\n            :description=\"content.description\"\n            :date=\"content.date\"\n            :url=\"content.url\"\n        >\n        </supplemental-content-object>\n        <collapse-button\n            v-if=\"showMoreNeeded\"\n            v-bind:class=\"{ subcategory: subcategory }\"\n            :name=\"innerName\"\n            state=\"collapsed\"\n            class=\"category-title show-more\"\n        >\n            <template v-slot:expanded>\n                <show-more-button\n                    buttonText=\"- Show Less\"\n                    :count=\"contentCount\"\n                ></show-more-button>\n            </template>\n            <template v-slot:collapsed>\n                <show-more-button\n                    buttonText=\"+ Show More\"\n                    :count=\"contentCount\"\n                ></show-more-button>\n            </template>\n        </collapse-button>\n        <collapsible\n            :name=\"innerName\"\n            state=\"collapsed\"\n            class=\"category-content show-more-content\"\n        >\n            <supplemental-content-object\n                v-for=\"(content, index) in additionalContent\"\n                :key=\"index\"\n                :name=\"content.name\"\n                :description=\"content.description\"\n                :date=\"content.date\"\n                :url=\"content.url\"\n            >\n            </supplemental-content-object>\n            <collapse-button\n                v-if=\"showMoreNeeded && contentCount > 10\"\n                v-bind:class=\"{ subcategory: subcategory }\"\n                :name=\"innerName\"\n                state=\"collapsed\"\n                class=\"category-title show-more\"\n            >\n                <template v-slot:expanded>\n                    <show-more-button\n                        buttonText=\"- Show Less\"\n                        :count=\"contentCount\"\n                    ></show-more-button>\n                </template>\n                <template v-slot:collapsed>\n                    <show-more-button\n                        buttonText=\"+ Show More\"\n                        :count=\"contentCount\"\n                    ></show-more-button>\n                </template>\n            </collapse-button>\n        </collapsible>\n    </div>\n</template>\n\n<script>\nimport SupplementalContentObject from \"./SupplementalContentObject.vue\";\nimport ShowMoreButton from \"./ShowMoreButton.vue\";\nimport CollapseButton from \"./CollapseButton.vue\";\nimport Collapsible from \"./Collapsible.vue\";\n\nexport default {\n    name: \"supplemental-content-list\",\n\n    components: {\n        SupplementalContentObject,\n        ShowMoreButton,\n        CollapseButton,\n        Collapsible,\n    },\n\n    props: {\n        supplemental_content: {\n            type: Array,\n            required: true,\n        },\n        has_sub_categories: {\n            type: Boolean,\n            required: true,\n        },\n        limit: {\n            type: Number,\n            required: false,\n            default: 5,\n        },\n    },\n\n    data() {\n        return {\n            innerName: Math.random()\n                .toString(36)\n                .replace(/[^a-z]+/g, \"\"),\n        };\n    },\n\n    computed: {\n        limitedContent() {\n            return this.supplemental_content.slice(0, this.limit);\n        },\n        additionalContent() {\n            return this.supplemental_content.slice(this.limit);\n        },\n        contentCount() {\n            return this.supplemental_content.length;\n        },\n        showMoreNeeded() {\n            return this.contentCount > this.limit;\n        },\n    },\n};\n</script>\n","<template>\n    <div class=\"supplemental-content-category\">\n        <div class=\"category\">\n            <collapse-button v-bind:class=\"{ subcategory: subcategory }\" :name=\"name\" state=\"collapsed\" class=\"category-title\">\n                <template v-slot:expanded>{{ name }} <i class=\"fa fa-chevron-up\"></i></template>\n                <template v-slot:collapsed>{{ name }} <i class=\"fa fa-chevron-down\"></i></template>\n            </collapse-button>\n            <span v-if=\"showDescription\" class=\"category-description\">{{\n                description\n            }}</span>\n            <collapsible\n                :name=\"name\"\n                state=\"collapsed\"\n                class=\"category-content\"\n            >\n                <supplemental-content-category\n                    v-for=\"(category, index) in sub_categories\"\n                    :key=\"index\"\n                    :subcategory=\"true\"\n                    :name=\"category.name\"\n                    :description=\"category.description\"\n                    :supplemental_content=\"category.supplemental_content\"\n                    :sub_categories=\"category.sub_categories\"\n                >\n                </supplemental-content-category>\n                <supplemental-content-list\n                    :supplemental_content=\"supplemental_content\"\n                    :has_sub_categories=\"has_sub_categories\"\n                />\n            </collapsible>\n        </div>\n    </div>\n</template>\n\n<script>\nimport SupplementalContentList from \"./SupplementalContentList.vue\";\nimport CollapseButton from \"./CollapseButton.vue\";\nimport Collapsible from \"./Collapsible.vue\";\n\nexport default {\n    name: \"supplemental-content-category\",\n\n    components: {\n        SupplementalContentList,\n        CollapseButton,\n        Collapsible,\n    },\n\n    props: {\n        subcategory: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        name: {\n            type: String,\n            required: true,\n        },\n        description: {\n            type: String,\n            required: true,\n        },\n        supplemental_content: {\n            type: Array,\n            required: false,\n        },\n        sub_categories: {\n            type: Array,\n            required: false,\n        },\n    },\n\n    computed: {\n        showDescription: function () {\n            return this.description && !/^\\s*$/.test(this.description);\n        },\n        has_sub_categories() {\n            return this.sub_categories.length;\n        },\n    },\n};\n</script>\n","<template>\n    <div class=\"supplemental-content-container\">\n        <template v-if=\"isFetching\">\n            <simple-spinner></simple-spinner>\n        </template>\n        <template v-else>\n            <supplemental-content-category\n                v-for=\"(category, index) in categories\"\n                :key=\"index\"\n                :name=\"category.name\"\n                :description=\"category.description\"\n                :supplemental_content=\"category.supplemental_content\"\n                :sub_categories=\"category.sub_categories\"\n            >\n            </supplemental-content-category>\n        </template>\n    </div>\n</template>\n\n<script>\nimport SimpleSpinner from \"./SimpleSpinner.vue\";\nimport SupplementalContentCategory from \"./SupplementalContentCategory.vue\";\n\nexport default {\n    components: {\n        SupplementalContentCategory,\n        SimpleSpinner,\n    },\n\n    props: {\n        api_url: {\n            type: String,\n            required: true,\n        },\n        title: {\n            type: String,\n            required: true,\n        },\n        part: {\n            type: String,\n            required: true,\n        },\n        sections: {\n            type: Array,\n            required: false,\n            default: [],\n        },\n        subparts: {\n            type: Array,\n            required: false,\n            default: [],\n        },\n    },\n\n    data() {\n        return {\n            categories: [],\n            isFetching: true,\n        };\n    },\n\n    created() {\n        this.fetch_content(this.title, this.part);\n    },\n\n    computed: {\n        params_array: function () {\n            return [\n                [\"sections\", this.sections],\n                [\"subparts\", this.subparts],\n            ];\n        },\n        joined_locations: function () {\n            let output = \"\";\n            this.params_array.forEach(function (param) {\n                if (param[1].length > 0) {\n                    const queryString = \"&\" + param[0] + \"=\";\n                    output += queryString + param[1].join(queryString);\n                }\n            });\n            return output;\n        },\n    },\n\n    methods: {\n        async fetch_content(title, part) {\n            try {\n                const response = await fetch(\n                    `${this.api_url}title/${title}/part/${part}/supplemental_content?${this.joined_locations}`\n                );\n                const content = await response.json();\n                this.categories = content;\n            } catch (error) {\n                console.error(error);\n            } finally {\n                this.isFetching = false;\n            }\n        },\n    },\n};\n</script>\n"],"names":[],"mappings":"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}